>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([])
Traceback (most recent call last):
  File "<pyshell#2>", line 1, in <module>
    matrix_divided([])
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix_divided([[]], 2)
Traceback (most recent call last):
  File "<pyshell#3>", line 1, in <module>
    matrix_divided([[]], 2)
  File "<pyshell#1>", line 13, in matrix_divided
    "matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1],[2]], 1)
[[1.0], [2.0]]
>>> matrix_divided([[1],[2]], 3)
[[0.33], [0.67]]
>>> matrix_divided([[1],[]], 3)
Traceback (most recent call last):
  File "<pyshell#6>", line 1, in <module>
    matrix_divided([[1],[]], 3)
  File "<pyshell#1>", line 20, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([["evan"],["evan"]], 3)
Traceback (most recent call last):
  File "<pyshell#7>", line 1, in <module>
    matrix_divided([["evan"],["evan"]], 3)
  File "<pyshell#1>", line 24, in matrix_divided
    "matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(["evan"], 3)
Traceback (most recent call last):
  File "<pyshell#9>", line 1, in <module>
    matrix_divided(["evan"], 3)
  File "<pyshell#1>", line 18, in matrix_divided
    "matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided()
Traceback (most recent call last):
  File "<pyshell#10>", line 1, in <module>
    matrix_divided()
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> matrix_divided([[1]], "evan")
Traceback (most recent call last):
  File "<pyshell#12>", line 1, in <module>
    matrix_divided([[1]], "evan")
  File "<pyshell#1>", line 27, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> matrix_divided([[1]], 0)
Traceback (most recent call last):
  File "<pyshell#13>", line 1, in <module>
    matrix_divided([[1]], 0)
  File "<pyshell#1>", line 30, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> matrix_divided([[1],[1,2,3]], 2)
Traceback (most recent call last):
  File "<pyshell#15>", line 1, in <module>
    matrix_divided([[1],[1,2,3]], 2)
  File "<pyshell#1>", line 20, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[1, "evan"],[2,"evan"]], 2)
Traceback (most recent call last):
  File "<pyshell#16>", line 1, in <module>
    matrix_divided([[1, "evan"],[2,"evan"]], 2)
  File "<pyshell#1>", line 24, in matrix_divided
    "matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats
